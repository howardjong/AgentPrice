modules = ["nodejs-20", "bash", "web"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
run = ["npm", "run", "start"]
build = ["npm", "run", "build"]

[[ports]]
localPort = 3000
externalPort = 3001

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 6379
externalPort = 3000

[[ports]]
localPort = 33065
externalPort = 3002

[[ports]]
localPort = 3000
externalPort = 80

task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules npm test"

[workflows]
runButton = "Chart Viewer"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

[[workflows.workflow]]
name = "Run Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules npm test"

[[workflows.workflow]]
name = "Test Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest --config=jest.config.js"

[[workflows.workflow]]
name = "Test Redis"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisConnectionTest.js"

[[workflows.workflow]]
name = "Test Request Monitor"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/requestMonitorTest.js"

[[workflows.workflow]]
name = "Test Prompt Manager"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow]]
name = "Test Mock Research"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/mockResearchTest.js"

[[workflows.workflow]]
name = "Test Perplexity Service"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js"

[[workflows.workflow]]
name = "Run Unit Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest tests/unit/services/researchService.test.js"

[[workflows.workflow]]
name = "Final Test Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest tests/unit/services/researchService.test.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisConnectionTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js"

[[workflows.workflow]]
name = "Test Health Endpoint"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/healthEndpointTest.js"

[[workflows.workflow]]
name = "Test Perplexity"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testPerplexityModelExtraction.js"

[[workflows.workflow]]
name = "Test Perplexity with Delay"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 65 && node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 2 && node tests/manual/testPerplexityModelExtraction.js"

[[workflows.workflow]]
name = "Test Deep Research"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testDeepResearch.js"

[[workflows.workflow]]
name = "Test Deep Research Query"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testDeepResearch.js \"what does the competitor landscape look like for all day elementary school children camps in spring and summer break in the greater Vancouver area?\""

[[workflows.workflow]]
name = "Test Deep Research With Verbose Output"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "DEBUG=perplexity:response node tests/manual/testDeepResearch.js \"what does the competitor landscape look like for all day elementary school children camps in spring and summer break in the greater Vancouver area?\""

[[workflows.workflow]]
name = "View Complete Perplexity Response"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/debug-view-response.js"

[[workflows.workflow]]
name = "Test Claude Fallback"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/test-claude-fallback.js"

[[workflows.workflow]]
name = "Verify Claude Haiku"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/verify-claude-haiku.js"

[[workflows.workflow]]
name = "Test Rate Limit Recovery"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testRateLimitRecovery.js"

[[workflows.workflow]]
name = "Test Rate Limiter"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testRateLimiter.js"

[[workflows.workflow]]
name = "Test Claude Prompt Manager"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-claude-prompt-manager.js"

[[workflows.workflow]]
name = "Test Plotly Integration"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration.js"

[[workflows.workflow]]
name = "Test Workflow Integration"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-workflow-integration.js"

[[workflows.workflow]]
name = "Test Single Query Workflow"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-single-query-workflow.js"

[[workflows.workflow]]
name = "Verify Claude Model Details"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/check-claude-model-details.js"

[[workflows.workflow]]
name = "Test Single Query with Claude 3.7"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js claude"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration.js"

[[workflows.workflow]]
name = "Start Application with Charts"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Compare Pricing Prompt Versions"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/compare-prompt-versions.js"

[[workflows.workflow]]
name = "Compare Cached Prompt Results"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/compare-cached-results.js"

[[workflows.workflow]]
name = "Compare Test Results"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/compare-test-results.js"

[[workflows.workflow]]
name = "Start Application"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Unit Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest tests/unit/services/researchService.test.js"

[[workflows.workflow]]
name = "Integration Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-claude-prompt-manager.js"

[[workflows.workflow]]
name = "Full Test Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest --config=jest.config.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisConnectionTest.js"

[[workflows.workflow]]
name = "Minimal Test Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset circuit breaker before tests"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test core utilities (no API calls)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest tests/unit/utils/circuitBreaker.test.js tests/unit/utils/logger.test.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test prompt manager functionality (no API calls)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Single validation test for each API (minimal calls)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/verify-claude-haiku.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js --minimal"

[[workflows.workflow]]
name = "Perplexity Minimal Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset circuit breaker without making test calls"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js --skip-test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test prompt manager functionality (no API calls)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test Perplexity with minimal API calls"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js --minimal"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test deep research with minimal API usage (single query)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity --skip-test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testPerplexityModelExtraction.js"

[[workflows.workflow]]
name = "Test Plotly Integration Minimal"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration-minimal.js"

[[workflows.workflow]]
name = "Test and View Charts"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run the minimal Plotly test to generate chart files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration-minimal.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Then verify chart viewer setup"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-chart-viewer.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Start server to view charts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx serve . -l 3000"

[[workflows.workflow]]
name = "View Charts"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run the test to generate chart files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration-minimal.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Then start the server on 0.0.0.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/serve-charts.js"

[[workflows.workflow]]
name = "Chart Viewer"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First ensure test output directory exists"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "mkdir -p tests/output"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Create sample test files if needed"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const fs = require('fs');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const path = require('path');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const outputDir = path.join(process.cwd(), 'tests', 'output');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const files = ['van_westendorp_plotly.json', 'conjoint_plotly.json', 'bar_chart_plotly.json'];"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const sampleData = {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  plotlyConfig: {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    data: [{x: [1, 2, 3], y: [1, 2, 3], type: 'scatter', name: 'Sample Data'}],"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    layout: {title: 'Sample Chart'},"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    config: {responsive: true}"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  },"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  insights: ['This is a sample insight']"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "};"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "files.forEach(file => {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  const filePath = path.join(outputDir, file);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  if (!fs.existsSync(filePath)) {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    fs.writeFileSync(filePath, JSON.stringify(sampleData, null, 2));"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    console.log('Created sample file:', file);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  }"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "});"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Start server with explicit port binding"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx express-generator"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx nodemon tests/manual/serve-charts.js"

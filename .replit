modules = ["nodejs-20", "bash", "web"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
run = ["npm", "run", "start"]
build = ["npm", "run", "build"]

[[ports]]
localPort = 3000
externalPort = 3001

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3003

[[ports]]
localPort = 5002
externalPort = 4200

[[ports]]
localPort = 6379
externalPort = 3000

[[ports]]
localPort = 33065
externalPort = 3002

[workflows]
runButton = "Optimize Performance"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

[[workflows.workflow]]
name = "Run Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules npm test"

[[workflows.workflow]]
name = "Test Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest --config=jest.config.js"

[[workflows.workflow]]
name = "Test Redis"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisConnectionTest.js"

[[workflows.workflow]]
name = "Test Request Monitor"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/requestMonitorTest.js"

[[workflows.workflow]]
name = "Test Prompt Manager"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow]]
name = "Test Mock Research"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/mockResearchTest.js"

[[workflows.workflow]]
name = "Test Perplexity Service"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js"

[[workflows.workflow]]
name = "Run Unit Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest tests/unit/services/researchService.test.js"

[[workflows.workflow]]
name = "Final Test Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest tests/unit/services/researchService.test.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisConnectionTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js"

[[workflows.workflow]]
name = "Test Health Endpoint"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/healthEndpointTest.js"

[[workflows.workflow]]
name = "Test Perplexity"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testPerplexityModelExtraction.js"

[[workflows.workflow]]
name = "Test Perplexity with Delay"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 65 && node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sleep 2 && node tests/manual/testPerplexityModelExtraction.js"

[[workflows.workflow]]
name = "Test Deep Research"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testDeepResearch.js"

[[workflows.workflow]]
name = "Test Deep Research Query"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testDeepResearch.js \"what does the competitor landscape look like for all day elementary school children camps in spring and summer break in the greater Vancouver area?\""

[[workflows.workflow]]
name = "Test Deep Research With Verbose Output"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "DEBUG=perplexity:response node tests/manual/testDeepResearch.js \"what does the competitor landscape look like for all day elementary school children camps in spring and summer break in the greater Vancouver area?\""

[[workflows.workflow]]
name = "View Complete Perplexity Response"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/debug-view-response.js"

[[workflows.workflow]]
name = "Test Claude Fallback"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/test-claude-fallback.js"

[[workflows.workflow]]
name = "Verify Claude Haiku"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/verify-claude-haiku.js"

[[workflows.workflow]]
name = "Test Rate Limit Recovery"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testRateLimitRecovery.js"

[[workflows.workflow]]
name = "Test Rate Limiter"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testRateLimiter.js"

[[workflows.workflow]]
name = "Test Claude Prompt Manager"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-claude-prompt-manager.js"

[[workflows.workflow]]
name = "Test Plotly Integration"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration.js"

[[workflows.workflow]]
name = "Test Workflow Integration"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-workflow-integration.js"

[[workflows.workflow]]
name = "Test Single Query Workflow"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-single-query-workflow.js"

[[workflows.workflow]]
name = "Verify Claude Model Details"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/check-claude-model-details.js"

[[workflows.workflow]]
name = "Test Single Query with Claude 3.7"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js claude"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration.js"

[[workflows.workflow]]
name = "Start Application with Charts"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Compare Pricing Prompt Versions"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/compare-prompt-versions.js"

[[workflows.workflow]]
name = "Compare Cached Prompt Results"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/compare-cached-results.js"

[[workflows.workflow]]
name = "Compare Test Results"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/compare-test-results.js"

[[workflows.workflow]]
name = "Start Application"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Unit Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest tests/unit/services/researchService.test.js"

[[workflows.workflow]]
name = "Integration Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-claude-prompt-manager.js"

[[workflows.workflow]]
name = "Full Test Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest --config=jest.config.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisConnectionTest.js"

[[workflows.workflow]]
name = "Minimal Test Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset circuit breaker before tests"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test core utilities (no API calls)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_OPTIONS=--experimental-vm-modules jest tests/unit/utils/circuitBreaker.test.js tests/unit/utils/logger.test.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test prompt manager functionality (no API calls)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Single validation test for each API (minimal calls)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/verify-claude-haiku.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js --minimal"

[[workflows.workflow]]
name = "Perplexity Minimal Tests"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Reset circuit breaker without making test calls"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js --skip-test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test prompt manager functionality (no API calls)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/promptManagerTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test Perplexity with minimal API calls"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/perplexity-test.js --minimal"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test deep research with minimal API usage (single query)"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/reset-circuit-breaker.js perplexity --skip-test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testPerplexityModelExtraction.js"

[[workflows.workflow]]
name = "Test Plotly Integration Minimal"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration-minimal.js"

[[workflows.workflow]]
name = "Test and View Charts"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run the minimal Plotly test to generate chart files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration-minimal.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Then verify chart viewer setup"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-chart-viewer.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Start server to view charts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx serve . -l 3000"

[[workflows.workflow]]
name = "View Charts"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run the test to generate chart files"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/test-plotly-integration-minimal.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Then start the server on 0.0.0.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/serve-charts.js"

[[workflows.workflow]]
name = "Chart Viewer"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First ensure test output directory exists"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "mkdir -p tests/output"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Create sample test files if needed"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const fs = require('fs');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const path = require('path');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const outputDir = path.join(process.cwd(), 'tests', 'output');"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const files = ['van_westendorp_plotly.json', 'conjoint_plotly.json', 'bar_chart_plotly.json'];"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "const sampleData = {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  plotlyConfig: {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    data: [{x: [1, 2, 3], y: [1, 2, 3], type: 'scatter', name: 'Sample Data'}],"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    layout: {title: 'Sample Chart'},"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    config: {responsive: true}"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  },"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  insights: ['This is a sample insight']"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "};"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "files.forEach(file => {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  const filePath = path.join(outputDir, file);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  if (!fs.existsSync(filePath)) {"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    fs.writeFileSync(filePath, JSON.stringify(sampleData, null, 2));"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "    console.log('Created sample file:', file);"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  }"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "});"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Start server with explicit port binding"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx express-generator"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx nodemon tests/manual/serve-charts.js"

[[workflows.workflow]]
name = "Simple Chart Viewer"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Create and start a simple chart server"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/serve-charts.js"

[[workflows.workflow]]
name = "Chart Server"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Ensure output directory exists and create chart server"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "mkdir -p tests/output"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/serve-charts.js"

[[workflows.workflow]]
name = "Start Dev Without API Calls"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Set environment variable to disable automatic initialization"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "INIT_MOCK_DATA=false npm run dev"

[[workflows.workflow]]
name = "Start App - No API Calls"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev:no-api"

[[workflows.workflow]]
name = "System Health Check"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run the system health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow]]
name = "Regular Health Check"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run the system health check every 30 minutes"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "while true; do"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  echo "\n\n======================================="'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  echo \"SCHEDULED HEALTH CHECK: $(date)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  node tests/manual/system-health-check.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = '  echo "\nWaiting 30 minutes before next check..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "  sleep 1800"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "done"

[[workflows.workflow]]
name = "Run System Health"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run the system health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow]]
name = "Test Redis Service"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisServiceTest.js"

[[workflows.workflow]]
name = "Complete System Health Check"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run the complete system health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Running complete system health check...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run the standard health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Then check the file system"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/fileSystemCheck.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test Redis service"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisServiceTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Test API optimization"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/apiCallOptimization.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"All health checks completed!\""

[[workflows.workflow]]
name = "API Optimization Test"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run the API call optimization test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/apiCallOptimization.js"

[[workflows.workflow]]
name = "Run All Health Checks"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run all health checks in sequence"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"      RUNNING ALL HEALTH CHECKS\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Main system health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[1/4] Running system health check..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# File system check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[2/4] Running file system check..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/fileSystemCheck.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Redis service test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[3/4] Testing Redis service..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisServiceTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# API optimization test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[4/4] Testing API optimization..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/apiCallOptimization.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n======================================="'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"      ALL HEALTH CHECKS COMPLETE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow]]
name = "API Health Test"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run all health checks in sequence"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"      RUNNING ALL HEALTH CHECKS\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Main system health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[1/4] Running system health check..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# File system check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[2/4] Running file system check..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/fileSystemCheck.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Redis service test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[3/4] Testing Redis service..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisServiceTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# API optimization test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[4/4] Testing API optimization..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/apiCallOptimization.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n======================================="'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"      ALL HEALTH CHECKS COMPLETE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow]]
name = "Start Fixed App"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev:no-api"

[[workflows.workflow]]
name = "Run All System Checks"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run system health checks and API optimization test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/apiCallOptimization.js"

[[workflows.workflow]]
name = "Run Full Health Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run complete health check suite"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"      RUNNING COMPLETE HEALTH SUITE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# System health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[1/3] Running system health check..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# File system health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[2/3] Running file system check..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/fileSystemCheck.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Redis service test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[3/3] Testing Redis service..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/redisServiceTest.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n======================================="'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"      API OPTIMIZATION TEST\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/apiCallOptimization.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n======================================="'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"      ALL CHECKS COMPLETE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow]]
name = "Start Optimized App"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Start the application with API call optimization enabled"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export NODE_ENV=development"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DISABLE_LLM_CALLS=true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Performance Monitoring"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Start performance monitoring dashboard"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/systemPerformanceDashboard.js"

[[workflows.workflow]]
name = "Performance Optimization Suite"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run performance optimization test suite"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"   PERFORMANCE OPTIMIZATION SUITE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run the system health dashboard to collect metrics"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[1/4] Starting system health dashboard..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/systemHealthDashboard.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run memory leak detection"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[2/4] Running memory leak detection..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/memoryLeakAnalysis.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run API optimization tests"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[3/4] Testing API optimization..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/apiCallOptimization.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run component loading optimization test"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n[4/4] Testing component lazy loading..."'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/testComponentLoader.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n======================================="'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"   OPTIMIZATION SUITE COMPLETE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow]]
name = "Run Performance Analysis"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run system health check to confirm everything is working"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Then start the performance monitoring dashboard"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/systemHealthDashboard.js"

[[workflows.workflow]]
name = "Apply Performance Optimizations"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run the performance optimization script"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/optimizeSystemPerformance.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Then run the system health dashboard"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/systemHealthDashboard.js"

[[workflows.workflow]]
name = "Start Low Memory App"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Start the application with memory optimizations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export NODE_ENV=development"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PORT=5000"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export OPTIMIZE_MEMORY=true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export DISABLE_LLM_CALLS=true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node --expose-gc --max-old-space-size=256 scripts/start-dev-no-api.js"

[[workflows.workflow]]
name = "Run Lightweight Performance Optimizer"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run system health check to establish baseline"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Then apply performance optimizations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/optimizeSystemPerformance.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Display resource usage after optimizations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\n\nResource usage after optimizations:"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \"console.table(process.memoryUsage())\""

[[workflows.workflow]]
name = "Optimize Performance"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Apply optimizations with proper error handling and timeout protections"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"  RUNNING PERFORMANCE OPTIMIZATION\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# First run system health check to establish baseline"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js || echo \"Health check failed but continuing...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Apply optimizations with shorter timeout"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node --max-old-space-size=256 tests/manual/apply-optimizations.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Display resource usage after optimizations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\n\nResource usage after optimizations:"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \"console.table(process.memoryUsage())\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"✅ Performance optimization completed\""

[[workflows.workflow]]
name = "Apply Quick Optimizations"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Apply quick optimizations to reduce memory usage"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/apply-optimizations.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Show current memory usage after optimizations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo -e "\n\nCurrent memory usage after optimizations:"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \"console.table(process.memoryUsage())\""

[[workflows.workflow]]
name = "Check Optimization Status"
author = 35006224
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Check memory usage before running optimizations"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Current memory usage:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node -e \"console.table(process.memoryUsage())\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = ""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "# Run system health check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'echo "\n======================================="'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"     SYSTEM OPTIMIZATION STATUS    \""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=======================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tests/manual/system-health-check.js"
